//#define STM32L452xx

#include <stdint.h>
#include <string.h>

#include "HAL/HAL.hpp"

typedef struct
{
  uint8_t reg_address;
  uint8_t * data;
} to_be_sent_t;

uint8_t Mario_pixel_map[] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
                             0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00,
                             0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00,
                             0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6d, 0x6d, 0x6d, 0x6d,
                             0x6d,
                             0x6d, 0x6d, 0x6d, 0x6d, 0x6d, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff,
                             0xff,
                             0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00,
                             0x00, 0x00, 0x00, 0x6d, 0x6d, 0x6d, 0x6d, 0x6d, 0x6d, 0x6d, 0x6d,
                             0x6d,
                             0x6d, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
                             0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6d, 0x6d,
                             0x6d,
                             0x6d, 0x6d, 0x6d, 0x6d, 0x6d, 0x6d, 0x6d, 0x6d, 0x6d, 0x6d, 0x6d,
                             0x6d,
                             0x6d, 0x6d, 0x6d, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00,
                             0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x6d, 0x6d, 0x6d, 0x6d, 0x6d, 0x6d,
                             0x6d,
                             0x6d, 0x6d, 0x6d, 0x6d, 0x6d, 0x6d, 0x6d, 0x6d, 0x6d, 0x6d, 0x6d,
                             0xff,
                             0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00,
                             0x00, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0xff, 0xff, 0xff, 0xff,
                             0x24,
                             0x24, 0xff, 0xff, 0x00, 0x00, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24,
                             0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x24,
                             0x24,
                             0x24, 0x24, 0x24, 0xff, 0xff, 0xff, 0xff, 0x24, 0x24, 0xff, 0xff,
                             0x00,
                             0x00, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x00, 0x00, 0x00, 0x00,
                             0x00,
                             0x00, 0x00, 0x00, 0x24, 0x24, 0xff, 0xff, 0x24, 0x24, 0xff, 0xff,
                             0xff,
                             0xff, 0xff, 0xff, 0x24, 0x24, 0xff, 0xff, 0xff, 0xff, 0x24, 0x24,
                             0x24,
                             0x24, 0x24, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x24,
                             0x24, 0xff, 0xff, 0x24, 0x24, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
                             0x24,
                             0x24, 0xff, 0xff, 0xff, 0xff, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24,
                             0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x24, 0xff, 0xff,
                             0x24,
                             0x24, 0x24, 0x24, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x24, 0x24,
                             0xff,
                             0xff, 0xff, 0xff, 0xff, 0xff, 0x24, 0x24, 0x00, 0x00, 0x00, 0x00,
                             0x00,
                             0x00, 0x00, 0x00, 0x24, 0x24, 0xff, 0xff, 0x24, 0x24, 0x24, 0x24,
                             0xff,
                             0xff, 0xff, 0xff, 0xff, 0xff, 0x24, 0x24, 0xff, 0xff, 0xff, 0xff,
                             0xff,
                             0xff, 0x24, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x24,
                             0x24, 0x24, 0x24, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
                             0x24,
                             0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x00, 0x00,
                             0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x24, 0x24, 0x24,
                             0xff,
                             0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x24, 0x24, 0x24, 0x24,
                             0x24,
                             0x24, 0x24, 0x24, 0x24, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff,
                             0xff,
                             0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x24, 0x24,
                             0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00,
                             0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
                             0xff,
                             0xff, 0xff, 0xff, 0xff, 0xff, 0x24, 0x24, 0x00, 0x00, 0x00, 0x00,
                             0x00,
                             0x00, 0x00, 0x00, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24,
                             0x24,
                             0x24, 0x6d, 0x6d, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x6d, 0x6d,
                             0x24,
                             0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x24,
                             0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x6d, 0x6d,
                             0x24,
                             0x24, 0x24, 0x24, 0x24, 0x24, 0x6d, 0x6d, 0x24, 0x24, 0x00, 0x00,
                             0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24,
                             0x24,
                             0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x6d, 0x6d, 0x24, 0x24,
                             0x24,
                             0x24, 0x24, 0x24, 0x6d, 0x6d, 0x00, 0x00, 0x00, 0x00, 0x24, 0x24,
                             0x00,
                             0x00, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24,
                             0x24,
                             0x24, 0x24, 0x24, 0x6d, 0x6d, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24,
                             0x6d,
                             0x6d, 0x00, 0x00, 0x00, 0x00, 0x24, 0x24, 0xff, 0xff, 0xff, 0xff,
                             0x24,
                             0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24,
                             0x6d,
                             0x6d, 0x6d, 0x6d, 0x6d, 0x6d, 0x6d, 0x6d, 0x6d, 0x6d, 0x00, 0x00,
                             0x00,
                             0x00, 0x24, 0x24, 0xff, 0xff, 0xff, 0xff, 0x24, 0x24, 0x24, 0x24,
                             0x24,
                             0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x6d, 0x6d, 0x6d, 0x6d,
                             0x6d,
                             0x6d, 0x6d, 0x6d, 0x6d, 0x6d, 0x00, 0x00, 0x00, 0x00, 0x24, 0x24,
                             0xff,
                             0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x6d, 0x6d, 0x6d, 0x6d,
                             0x24,
                             0x24, 0x6d, 0x6d, 0x6d, 0x6d, 0xff, 0xff, 0x6d, 0x6d, 0x6d, 0x6d,
                             0xff,
                             0xff, 0x6d, 0x6d, 0x24, 0x24, 0x24, 0x24, 0xff, 0xff, 0xff, 0xff,
                             0xff,
                             0xff, 0x00, 0x00, 0x6d, 0x6d, 0x6d, 0x6d, 0x24, 0x24, 0x6d, 0x6d,
                             0x6d,
                             0x6d, 0xff, 0xff, 0x6d, 0x6d, 0x6d, 0x6d, 0xff, 0xff, 0x6d, 0x6d,
                             0x24,
                             0x24, 0x24, 0x24, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x24, 0x24,
                             0x6d,
                             0x6d, 0x6d, 0x6d, 0x6d, 0x6d, 0x6d, 0x6d, 0x6d, 0x6d, 0x6d, 0x6d,
                             0x6d,
                             0x6d, 0x6d, 0x6d, 0x6d, 0x6d, 0x6d, 0x6d, 0x24, 0x24, 0x24, 0x24,
                             0x00,
                             0x00, 0xff, 0xff, 0x00, 0x00, 0x24, 0x24, 0x6d, 0x6d, 0x6d, 0x6d,
                             0x6d,
                             0x6d, 0x6d, 0x6d, 0x6d, 0x6d, 0x6d, 0x6d, 0x6d, 0x6d, 0x6d, 0x6d,
                             0x6d,
                             0x6d, 0x6d, 0x6d, 0x24, 0x24, 0x24, 0x24, 0x00, 0x00, 0x00, 0x00,
                             0x24,
                             0x24, 0x24, 0x24, 0x24, 0x24, 0x6d, 0x6d, 0x6d, 0x6d, 0x6d, 0x6d,
                             0x6d,
                             0x6d, 0x6d, 0x6d, 0x6d, 0x6d, 0x6d, 0x6d, 0x6d, 0x6d, 0x6d, 0x6d,
                             0x24,
                             0x24, 0x24, 0x24, 0x00, 0x00, 0x00, 0x00, 0x24, 0x24, 0x24, 0x24,
                             0x24,
                             0x24, 0x6d, 0x6d, 0x6d, 0x6d, 0x6d, 0x6d, 0x6d, 0x6d, 0x6d, 0x6d,
                             0x6d,
                             0x6d, 0x6d, 0x6d, 0x6d, 0x6d, 0x6d, 0x6d, 0x24, 0x24, 0x24, 0x24,
                             0x00,
                             0x00, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x6d, 0x6d, 0x6d, 0x6d,
                             0x6d,
                             0x6d, 0x6d, 0x6d, 0x6d, 0x6d, 0x6d, 0x6d, 0x6d, 0x6d, 0x00, 0x00,
                             0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x24,
                             0x24,
                             0x24, 0x24, 0x24, 0x6d, 0x6d, 0x6d, 0x6d, 0x6d, 0x6d, 0x6d, 0x6d,
                             0x6d,
                             0x6d, 0x6d, 0x6d, 0x6d, 0x6d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x24, 0x00, 0x00, 0x00, 0x00,
                             0x6d,
                             0x6d, 0x6d, 0x6d, 0x6d, 0x6d, 0x6d, 0x6d, 0x00, 0x00, 0x00, 0x00,
                             0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00,
                             0x00, 0x24, 0x24, 0x00, 0x00, 0x00, 0x00, 0x6d, 0x6d, 0x6d, 0x6d,
                             0x6d,
                             0x6d, 0x6d, 0x6d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

uint8_t transfer1[9], transfer2[9], transfer3[9], transfer4[9];

inline void
HC595ToggleClk()
{
  GPIOC->BSRR = ( 1 << 8 );
  asm("nop");
  GPIOC->BRR = ( 1 << 8 );
}

inline void
HC595TriggerOutput()
{
  GPIOC->BSRR = ( 1 << 9 );
  asm("nop");
  GPIOC->BRR = ( 1 << 9 );
}
using namespace HAL;

int
main(void)
{

//	Clock_Init();

  HAL::init();

  SystemCoreClockUpdate();

  uint8_t sent;

  PB13::set_mode(eOutput);
  PB13::set_speed(eVeryHighSpeed);

  uint8_t dat = 0xff;
  uint8_t data[] = {0x82, 125, 125, 125, 125, 125, 125, 125, 125, 0xff, 0x00,
                    0b10101010,
                    0b10101010};
  uint8_t data1[] = {0x80, 0, 0x08};

  for(uint32_t i = 0 ; i < 0xffff ; i++)
    {
      ;
    }

  PB14::set_output_value(eLow);
  PB15::set_output_value(eLow);
  PC7::set_output_value(eLow);
  PC8::set_output_value(eLow);
  PC9::set_output_value(eLow);

  for(uint32_t i = 0 ; i < 0xffff ; i++)
    {
      ;
    }

  PB15::set_output_value(eHigh);
  PC6::set_output_value(eLow);
  PC7::set_output_value(eHigh);

  for(uint8_t i = 0 ; i < 32 ; i++)
    {
      PC8::set_output_low();
      for(uint32_t i = 0 ; i < 0xffff ; i++)
        {
          ;
        }
      PC8::set_output_high();
      for(uint32_t i = 0 ; i < 0xffff ; i++)
        {
          ;
        }
    }
  PC8::set_output_low();

  PC9::set_output_high();
  PC6::set_output_high();

  for(uint32_t i = 0 ; i < 0xffff ; i++)
    {
      ;
    }

  I2C_1::set_slave_address(0x40 >> 1, e7bitAddress);
  I2C_1::write_data(data1, 3);

  I2C_2::set_slave_address(0x42 >> 1, e7bitAddress);
  I2C_2::write_data(data1, 3);

  I2C_3::set_slave_address(0x44 >> 1, e7bitAddress);
  I2C_3::write_data(data1, 3);

  I2C_4::set_slave_address(0x46 >> 1, e7bitAddress);
  I2C_4::write_data(data1, 3);

  I2C_1::write_data(data, 13);
  I2C_2::write_data(data, 13);
  I2C_3::write_data(data, 13);
  I2C_4::write_data(data, 13);

  uint8_t currentLine = 0;

  PB14::set_output_low();

  transfer1[0] = transfer2[0] = transfer3[0] = transfer4[0] = 0x82;

  for(; ;)
    {

      if(currentLine > 31)
        {
          currentLine = 0;
        }

      memcpy(&( transfer1[1] ), &( Mario_pixel_map[currentLine * 32] ), sizeof(uint8_t) * 8);
      memcpy(&( transfer2[1] ), &( Mario_pixel_map[currentLine * 32 + 8] ), sizeof(uint8_t) * 8);
      memcpy(&( transfer3[1] ), &( Mario_pixel_map[currentLine * 32 + 16] ), sizeof(uint8_t) * 8);
      memcpy(&( transfer4[1] ), &( Mario_pixel_map[currentLine * 32 + 24] ), sizeof(uint8_t) * 8);

      PB14::set_output_high(); // output enable

      I2C_1::write_data(transfer1, 9);
      I2C_2::write_data(transfer2, 9);
      I2C_3::write_data(transfer3, 9);
      I2C_4::write_data(transfer4, 9);

      if(currentLine == 0)
        {
          PC7::set_output_low(); //data low
        }
      else
        {
          PC7::set_output_high(); // data high
        }
      HC595ToggleClk();
      HC595TriggerOutput();

      PB14::set_output_low(); // output enable

      for(uint32_t i = 0 ; i < 0xff ; i++)
        ;

      currentLine++;
    }

  return 0;
}
